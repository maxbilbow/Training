package fjwa.model;


import java.lang.ref.WeakReference;
import java.time.Duration;
import java.time.Instant;

import org.hibernate.validator.constraints.Range;
class StrongBomb {
	
}
public class Bomb extends WeakReference<StrongBomb> {
	private boolean live = true;

	@Range(min = 1)
	private int timeinSeconds;

	private String name;
	private static int count = 0;
	
	private final Instant startTime;
	public Bomb() {
		super(new StrongBomb());
		this.timeinSeconds = (int) (Math.random() * 20 + 5);
		this.name = "B" + ++count;
		this.startTime = Instant.now();
	}
	
	/**
	 * @return the live
	 */
	public boolean isLive() {
		return live;
	}

	/**
	 * @param live the live to set
	 */
	public void setLive(boolean live) {
		this.live = live;
	}

	/**
	 * @return the timeinSeconds
	 */
	public int getTimeinSeconds() {
		return timeinSeconds;
	}

	/**
	 * @param timeinSeconds the timeinSeconds to set
	 */
	public void setTimeinSeconds(int timeinSeconds) {
		this.timeinSeconds = timeinSeconds;
	}

	public String getName() {
		// TODO Auto-generated method stub
		return this.name;
	}
	
	public boolean hasTimeRunOut() {
		Instant now = Instant.now();
		
		Duration dt = Duration.between(this.startTime, now);
		this.timeinSeconds -= dt.getSeconds();
		System.out.println(this.timeinSeconds);
		return this.timeinSeconds < 0;
	}
	

}
